# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  checks: write
  contents: read
  id-token: write
  issues: write
  packages: write
  pull-requests: write

concurrency:
  group: "${{ github.workflow }} @ ${{ github.ref_name }}"
  cancel-in-progress: true

env:
  NPM_CONFIG_FUND: "false"

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      code: ${{ steps.filter.outputs.code }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          show-progress: false
          submodules: true

      - name: Check if we actually made changes
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: .github/file-filters.yml

  warm-up-cache:
    name: Warm up the cache
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          show-progress: false
          submodules: true

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Set up node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version-file: package.json
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Download dependencies
        shell: bash
        run: |
          pnpm install --frozen-lockfile

  npm-build:
    name: Build the code
    runs-on: ubuntu-latest
    needs:
      - warm-up-cache
    steps:
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          show-progress: false
          submodules: true

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Set up node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version-file: package.json
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Download dependencies from cache
        shell: bash
        run: |
          pnpm install --frozen-lockfile --offline

      - name: Run build
        shell: bash
        run: |
          pnpm run build

  npm-lint:
    name: Lint the code
    runs-on: ubuntu-latest
    needs:
      - warm-up-cache
    steps:
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          show-progress: false
          submodules: true

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Set up node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version-file: package.json
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Download dependencies from cache
        shell: bash
        run: |
          pnpm install --frozen-lockfile --offline

      - name: Run lint
        shell: bash
        run: |
          pnpm run lint --format=json --output-file reports/lint-report.json || true

          # hack to print results in the console
          node --print "require('./node_modules/eslint/lib/cli-engine/formatters/stylish.js')(require('./reports/lint-report.json'))"

      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@d57a1193d4c59cbfbf3f86c271f42612f9dbd9e9 # 3.0.0
        with:
          fail-on-error: true
          fail-on-warning: true
          markdown-report-on-step-summary: true
          only-pr-files: false
          report-json: reports/lint-report.json

  npm-test:
    name: Test the code
    runs-on: ubuntu-latest
    needs:
      - warm-up-cache
    steps:
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          show-progress: false
          submodules: true
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Set up node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version-file: package.json
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Download dependencies from cache
        shell: bash
        run: |
          pnpm install --frozen-lockfile --offline

      - name: Run tests
        shell: bash
        id: tests
        run: |
          pnpm run test --reporter=default --reporter=github-actions --reporter=junit --coverage.reporter=text --coverage.reporter=lcovonly
        continue-on-error: true

      - name: Upload coverage results (to Codecov.io)
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          disable_search: true
          disable_telem: true
          fail_ci_if_error: true
          files: coverage/lcov.info
          plugins: ""
          use_oidc: true

      - name: Upload test results to Codecov
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        with:
          disable_search: true
          # doesn't exist here... yet
          # disable_telem: true
          fail_ci_if_error: true
          files: reports/test-report.xml
          use_oidc: true

      - name: Fail if tests failed
        shell: bash
        if: steps.tests.outcome != 'success'
        run: |
          echo "Tests failed"
          exit 1

  npm-dependencies:
    name: Validate dependencies
    runs-on: ubuntu-latest
    needs:
      - warm-up-cache
    steps:
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          show-progress: false

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Set up node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version-file: package.json
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Download dependencies from cache
        shell: bash
        run: |
          pnpm install --frozen-lockfile --offline

      - name: Check dependencies
        shell: bash
        run: |
          pnpm run deps:ci

  all-done:
    name: All done
    # this is the job that should be marked as required on GitHub. It's the only one that'll reliably trigger
    # when any upstream fails: success
    # when all upstream skips: pass
    # when all upstream success: success
    # combination of upstream skip and success: success
    runs-on: ubuntu-latest
    needs:
      - warm-up-cache
      - npm-build
      - npm-dependencies
      - npm-lint
      - npm-test
    if: ${{ always() }}
    steps:
      - name: Fail!
        shell: bash
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: |
          echo "One / more upstream failed or was cancelled. Failing job..."
          exit 1

      - name: Success!
        shell: bash
        run: |
          echo "Great success!"
